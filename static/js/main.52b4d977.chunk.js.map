{"version":3,"sources":["components/ProtectedRoute.js","contexts/CurrentUserContext.js","components/Card.js","images/header__logo.svg","components/Header.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","utils/api.js","images/Auth_success.svg","images/Auth_fail.svg","components/InfoTooltip.js","components/AuthForm.js","components/Login.js","components/Register.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","props","loggedIn","to","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","className","type","onClick","src","link","alt","name","id","length","Header","headerLogoPath","email","aria-label","buttonText","handleHeaderBtn","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","Date","getFullYear","ImagePopup","useEffect","handleEscClosePopup","e","code","onClose","document","addEventListener","removeEventListener","onMouseDown","PopupWithForm","isOpen","onSubmit","noValidate","title","children","buttonName","EditProfilePopup","useState","setName","description","setDescription","preventDefault","onUpdateUser","value","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","nameInputValue","setNameInputValue","linkInputValue","setLinkInputValue","ConfirmDeletePopup","onDelete","api","baseUrl","headers","getDefaultCards","fetch","_baseUrl","_headers","then","res","_checkStatus","ok","json","Promise","reject","status","this","userData","method","body","JSON","stringify","cardData","authorization","InfoTooltip","isSucces","successPicRoute","failPicRoute","AuthForm","password","setUserData","handleUserDataChange","btnName","Login","isLoggedIn","handleLogin","isLoginPage","Register","handleRegister","BASE_URL","checkStatus","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","selectedCardDelete","setSelectedCardDelete","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","isRegistrationSuccess","setIsRegistrationSuccess","setLoggedIn","isLoginError","setIsLoginError","setEmail","cohort","setCurrentUser","setCards","history","useHistory","closeAllPopups","checkToken","token","localStorage","getItem","response","auth","data","push","catch","err","console","log","all","getUserInfo","userInfo","defaultCards","error","Provider","exact","path","setItem","item","toggleLike","newCard","state","c","removeItem","setAvatar","sendUserInfo","sendNewCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52b4d977.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {\n      () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;","// Контекст с текущими данными пользователя. Чтобы удобно было растаскивать по инпутам и прочему\r\n\r\nimport React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","// Функциональный компонент, отвечающий за рендер карточек с данными, получаемыми с сервера\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nimport React from 'react';\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `${isOwn ? 'elements__delete' : 'elements__delete_invisible'}`\r\n  );\r\n\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `elements__like ${isLiked ? 'elements__like_active' : ''}`\r\n  );\r\n\r\n  const handleClick = () => {\r\n    onCardClick(card);\r\n  }\r\n\r\n  const handleLike = () => {\r\n    onCardLike(card);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    onCardDelete(card._id);\r\n  }\r\n\r\n  return (\r\n    <li key={card._id} className=\"elements__card\">\r\n    <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDelete}></button>\r\n    <img src={card.link} alt={card.name} className=\"elements__photo\" onClick={handleClick} />\r\n    <div className=\"elements__info-panel\">\r\n      <h2 className=\"elements__name\" id=\"cardName\">{card.name}</h2>\r\n      <div className=\"elements__like-container\">\r\n        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLike}></button>\r\n        <p className=\"elements__like-counter\">{card.likes.length}</p>\r\n      </div>\r\n    </div>\r\n  </li>\r\n  )\r\n}\r\n\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/header__logo.bbe2a6ea.svg\";","// Функциональный компонент, отвечающий за рендер хедера\r\n\r\nimport headerLogoPath from '../images/header__logo.svg'\r\n\r\nfunction Header(props) {\r\n\r\nreturn (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={headerLogoPath} alt=\"Логотип проекта\" />\r\n      <div className=\"header__info-panel\">\r\n        <p className=\"header__email\">{props.email}</p>\r\n        <button\r\n          aria-label={props.buttonText}\r\n          className=\"header__button\"\r\n          onClick={props.handleHeaderBtn}>\r\n            {props.buttonText}\r\n        </button>\r\n      </div>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","// Функциональный компонент, отвечающий за рендер блока с профилем\r\n\r\nimport React from 'react';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport Header from './Header';\r\n\r\nfunction Main(props) {\r\n\r\n  // контекст для данных пользователя\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n    <Header buttonText={props.buttonText} handleHeaderBtn={props.handleHeaderBtn} email={props.email}/>\r\n      <main className=\"page\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__avatar-container\">\r\n              <div className=\"profile__avatar-overlay\">\r\n                <button className=\"profile__avatar-edit-button\" onClick={props.onEditAvatar}></button>\r\n              </div>\r\n              <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар профиля\"/>\r\n            </div>\r\n            <div className=\"profile__text-section\">\r\n              <div className=\"profile__name-section\">\r\n                <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\r\n              </div>\r\n              <p className=\"profile__function\">{currentUser.about}</p>\r\n            </div>\r\n          </div>\r\n          <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n        </section>\r\n        <section className=\"elements\">\r\n          <ul className=\"elements__grid\">\r\n            {props.cards.map(card => {\r\n              return (\r\n                <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n              )\r\n            })}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Main;","// Функциональный компонент, отвечающий за рендер футера\n\nimport React from 'react';\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&#169; {new Date().getFullYear()} Mesto by Mikhail Kirichkov</p>\n    </footer>\n  );\n}\n\nexport default Footer;","// Отдельный функциональный компонент, отвечающий за рендер модалки с увеличенным изображением\r\n\r\nimport React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  React.useEffect(() => {\r\n    const handleEscClosePopup = (e) => {\r\n      if (e.code === \"Escape\") props.onClose();\r\n    }\r\n    if (props.card) {\r\n        document.addEventListener('keyup', handleEscClosePopup);\r\n    }\r\n\r\n    return () => {\r\n        document.removeEventListener('keyup', handleEscClosePopup);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={`popup ${props.card.name ? 'popup_opened' : \"\" }`} name=\"popup_type_photo\" id=\"photoPopup\">\r\n      <div className=\"popup__form-container\">\r\n        <button type=\"button\" onMouseDown={props.onClose} className=\"popup__close-button popup__close-button_type_photo\" id=\"photoPopupCloseBtn\"></button>\r\n        <figure className=\"popup__image-container\">\r\n          <img src={props.card.link} alt={props.card.name} className=\"popup__photo\" />\r\n          <figcaption className=\"popup__photo-name\">{props.card.name}</figcaption>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","// Функциональный компонент, отвечающий за рендер всех модалок с формами\r\n\r\nimport React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n  React.useEffect(() => {\r\n    const handleEscClosePopup = (e) => {\r\n        if (e.code === \"Escape\") props.onClose();\r\n    }\r\n    if (props.isOpen) {\r\n        document.addEventListener('keyup', handleEscClosePopup);\r\n    }\r\n\r\n    return () => {\r\n        document.removeEventListener('keyup', handleEscClosePopup);\r\n    }\r\n  }, [props, props.isOpen]);\r\n\r\n  return (\r\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : \"\" }`}>\r\n      <form  name={props.name} className=\"popup__main-form\" onSubmit={props.onSubmit} noValidate >\r\n        <button  onMouseDown={props.onClose} type=\"button\" className=\"popup__close-button\"></button>\r\n        <h2 className=\"popup__header\">{props.title}</h2>\r\n        {props.children}\r\n        <button type=\"submit\" className=\"popup__save-button\">{props.buttonName}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  // Хуки для изменения имени и описания\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonName=\"Сохранить\">\r\n      <div className=\"popup__input-container\">\r\n        <input type=\"text\" name=\"name\" id=\"profilePopupName\" className=\"popup__input popup__name\" value={name} onChange={handleNameChange} placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required />\r\n        <span className=\"popup__error-span\" id=\"profilePopupName-error\"></span>\r\n      </div>\r\n      <div className=\"popup__input-container\">\r\n        <input type=\"text\" name=\"about\" id=\"profilePopupJob\" className=\"popup__input popup__function\" value={description} onChange={handleDescriptionChange} placeholder=\"Призвание\" minLength=\"2\" maxLength=\"200\" required />\r\n        <span className=\"popup__error-span\" id=\"profilePopupJob-error\"></span>\r\n      </div>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","//  модалка с редактированием аватара\r\n\r\nimport React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  // записываем объект, возвращаемый хуком, в переменную, которая будет связана с аватаром\r\n  const avatarRef = React.useRef();\r\n\r\n  // отправка формы, обновление аватара через реф, завязанный на инпут в самой форме\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar(\r\n      avatarRef.current.value\r\n    );\r\n  }\r\n\r\n  //очистка инпута модалки после отправления данных на сервер\r\n  React.useEffect(() => {\r\n    avatarRef.current.value = \"\"\r\n  }, [props, props.isOpen])\r\n\r\n  return (\r\n    <PopupWithForm name=\"avatar\"  title=\"Обновить аватар\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonName=\"Сохранить\">\r\n      <div className=\"popup__input-container\">\r\n          <input type=\"url\" name=\"link\" id=\"avatarPopupLink\" className=\"popup__input popup__avatar-url\" ref={avatarRef} placeholder=\"Ссылка на новый аватар\" minLength=\"2\" required />\r\n          <span className=\"popup__error-span\" id=\"avatarPopupLink-error\"></span>\r\n      </div>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  //рефы для имени и линка карточки+\r\n  const [nameInputValue, setNameInputValue ] = React.useState(\"\");\r\n  const [linkInputValue, setLinkInputValue ] = React.useState(\"\");\r\n\r\n  //создаем 2 функции для управляемых компонентов\r\n  function handleNameChange(e) {\r\n    setNameInputValue(e.target.value)\r\n  }\r\n  function handleLinkChange(e) {\r\n    setLinkInputValue(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    //отправляем данные из инпутов\r\n    props.onSubmit({\r\n      name: nameInputValue,\r\n      link: linkInputValue\r\n    })\r\n\r\n  }\r\n\r\n  //очистка инпутов модалки после отправления данных на сервер\r\n  React.useEffect(() => {\r\n    setNameInputValue(\"\")\r\n    setLinkInputValue(\"\")\r\n  }, [props, props.isOpen])\r\n\r\n  return (\r\n    <PopupWithForm name=\"place\" title=\"Новое место\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonName=\"Сохранить\">\r\n      <div className=\"popup__input-container\">\r\n          <input type=\"text\" name=\"name\" id=\"placePopupName\" value={nameInputValue} onChange={handleNameChange} className=\"popup__input popup__name\" placeholder=\"Название\" minLength=\"2\" maxLength=\"40\" required />\r\n          <span className=\"popup__error-span\" id=\"placePopupName-error\"></span>\r\n        </div>\r\n        <div className=\"popup__input-container\">\r\n          <input type=\"url\" name=\"link\" id=\"placePopupLink\" value={linkInputValue} onChange={handleLinkChange} className=\"popup__input popup__function\" placeholder=\"Ссылка на картинку\" minLength=\"2\" required />\r\n          <span className=\"popup__error-span\" id=\"placePopupLink-error\"></span>\r\n      </div>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","// Тут модалка с подтверждением удаления карточки\r\n\r\nimport React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmDeletePopup(props) {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onDelete()\r\n  }\r\n  return (\r\n    <PopupWithForm name=\"confirm\" title=\"Вы уверены?\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonName=\"Удалить\"/>\r\n  )\r\n}\r\n\r\nexport default ConfirmDeletePopup;","import React from 'react';\n\n//Класс содержит всю логику для работы с API\nclass Api extends React.Component {\n  constructor({props, baseUrl, headers}) {\n    super(props);\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  //проверка состояния промиса, чтобы не писать одно и то же сто тыщ раз\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  //получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/v1/cohort-24/users/me`, {\n      headers: this._headers\n    })\n    .then(res => this._checkStatus(res));\n  }\n\n  //обновление информации о пользователе с сервера\n  sendUserInfo(userData) {\n    return fetch(`${this._baseUrl}/v1/cohort-24/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify ({\n        name: userData.name,\n        about: userData.about\n      })\n    })\n    .then(res => this._checkStatus(res));\n  }\n\n  //получение списка карточек с сервера при старте страницы\n  getDefaultCards = () => {\n    return fetch(`${this._baseUrl}/v1/cohort-24/cards`, {\n      headers: this._headers\n    })\n    .then(res => this._checkStatus(res));\n  }\n\n  //отправка новой карточки на сервер\n  sendNewCard(cardData) {\n    return fetch(`${this._baseUrl}/v1/cohort-24/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify ({\n        name: cardData.name,\n        link: cardData.link\n      })\n    })\n    .then(res => this._checkStatus(res));\n  }\n\n  //удаление карточки с сервера\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/v1/cohort-24/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n      })\n      .then(res => this._checkStatus(res));\n  }\n\n  //запрос на добавление лайка на сервер или его удаление\n  toggleLike(isLiked, id) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-24/cards/likes/${id}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n      })\n    .then(res => this._checkStatus(res));\n  }\n\n  //запрос на обновление аватара\n  setAvatar(userData) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-24/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify ({\n        avatar: userData\n      })\n    })\n    .then(res => this._checkStatus(res))\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co',\n  headers: {\n    authorization: '5183e2a2-8586-4c29-b979-09c0ece03d78',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/Auth_success.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/Auth_fail.d4ce2a26.svg\";","// тут таблички с информацией про успешную или не очень успешную регистрацию\r\nimport React from 'react';\r\nimport successPicRoute from \"../images/Auth_success.svg\";\r\nimport failPicRoute from \"../images/Auth_fail.svg\";\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n  React.useEffect(() => {\r\n    const handleEscClosePopup = (e) => {\r\n        if (e.code === \"Escape\") props.onClose();\r\n    }\r\n    if (props.isOpen) {\r\n        document.addEventListener('keyup', handleEscClosePopup);\r\n    }\r\n\r\n    return () => {\r\n        document.removeEventListener('keyup', handleEscClosePopup);\r\n    }\r\n  }, [props, props.isOpen]);\r\n\r\n  return (\r\n    <div className={`info-tooltip ${props.isOpen ? 'info-tooltip_opened' : \"\" }`}>\r\n      <div className=\"info-tooltip__container\">\r\n      <button  onMouseDown={props.onClose} type=\"button\" className=\"popup__close-button\"></button>\r\n        <img src={props.isSucces ? successPicRoute : failPicRoute} alt={props.isSucces ? \"Успешная авторизация\" : \"Авторизация не произошла\"} className=\"info-tooltip__picture\"/>\r\n        <p className=\"info-tooltip__text\">{props.isSucces ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default InfoTooltip;","import React from 'react';\nimport Header from './Header';\n\nfunction AuthForm(props) {\n\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  })\n\n  const handleUserDataChange = (e) => {\n    const {name, value} = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    })\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit( userData.email, userData.password);\n  }\n\n  return (\n    <>\n      <Header buttonText={props.buttonText} handleHeaderBtn={props.handleHeaderBtn}/>\n      <form  name=\"AuthForm\" className=\"auth-form\" onSubmit={handleFormSubmit} noValidate >\n        <h2 className=\"auth-form__header\">{props.title}</h2>\n        <input type=\"email\" name=\"email\" id=\"authFormEmail\" className=\"auth-form__input auth-form__input_type_email\" placeholder=\"Email\" value={userData.email} onChange={handleUserDataChange} minLength=\"2\" maxLength=\"40\" required />\n        <input type=\"password\" name=\"password\" id=\"authFormPassword\" className=\"auth-form__input auth-form__input_type_password\" placeholder=\"Пароль\" value={userData.password} onChange={handleUserDataChange} minLength=\"2\" maxLength=\"40\" required />\n        <button type=\"submit\" className=\"auth-form__save-button\">{props.btnName}</button>\n        {props.children}\n      </form>\n    </>\n  )\n\n}\n\nexport default AuthForm;","\nimport React from 'react';\nimport AuthForm from './AuthForm';\n\nfunction Login(props) {\n\n  return (\n    <AuthForm\n        title=\"Вход\"\n        btnName=\"Вход\"\n        buttonText={props.buttonText}\n        isLoggedIn={props.isLoggedIn}\n        onSubmit={props.handleLogin}\n        isLoginPage={true}\n        handleHeaderBtn={props.handleHeaderBtn} >\n          <p className={`auth-form__error-text ${props.isOpen ? 'auth-form__error-text_active' : \"\" }`}>Неудачная попытка входа</p>\n      </AuthForm>\n  )\n}\n\nexport default Login;","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Register(props) {\r\n\r\n  return (\r\n    <AuthForm\r\n      title=\"Регистрация\"\r\n      btnName=\"Зарегистрироваться\"\r\n      buttonText={props.buttonText}\r\n      isLoginPage={false}\r\n      isLoggedIn={props.isLoggedIn}\r\n      onSubmit={props.handleRegister}\r\n      handleHeaderBtn={props.handleHeaderBtn}\r\n    >\r\n      <div className=\"auth-form__text-container\">\r\n        <p className=\"auth-form__already-register\">Уже зарегистрированы?</p>\r\n        <Link to=\"sign-in\" className=\"auth-form__sign-in-link\">Войти</Link>\r\n      </div>\r\n    </AuthForm>\r\n  )\r\n}\r\n\r\nexport default Register;","export const BASE_URL = 'https://auth.nomoreparties.co';\n\n//Запрос для регистрации пользователя\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    return checkStatus(response);\n  })\n}\n\n//Запрос для авторизации пользователя\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  })\n  .then((response) => {\n    return checkStatus(response);\n  })\n}\n\n//Запрос для проверки валидности токена и получения email для вставки в шапку сайта\nexport const checkUser = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then((response) => {\n    return checkStatus(response);\n  })\n}\n\n//проверка состояния промиса, чтобы не писать одно и то же сто тыщ раз\nfunction checkStatus(res) {\n  if (res.status.ok) {\n    return res.json()\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}","import React from 'react';\nimport { Route, Switch, Redirect, useHistory} from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport './App.css';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport InfoTooltip from './InfoTooltip';\nimport Login from './Login';\nimport Register from './Register';\nimport * as auth from '../utils/auth';\n\n\nfunction App() {\n\n  // хук для модалки с изменением профиля\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  // хук для открытия модалки с добавлением карточки\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  // хук для открытия модалки со сменой аватара\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  // хук для открытия модалки с подтверждением удаления\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  // хук для модалки с зумом\n  const [selectedCard, setSelectedCard] = React.useState({});\n  // хук для модалки с подтверждением удаления карточки\n  const [selectedCardDelete, setSelectedCardDelete] = React.useState({});\n  // хуки для модалки со статусом регистрации\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = React.useState(false);\n  // хук для проверки логина пользователя;\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isLoginError, setIsLoginError] = React.useState(false);\n  // хук для подставления мыльца в верх странички, чтоб красиво было\n  const [email, setEmail] = React.useState('');\n  // хук для данных пользователя\n  const [currentUser, setCurrentUser] = React.useState({\n    name: \"\",\n    about: \"\",\n    avatar: \"\",\n    cohort: \"\",\n    _id: \"\"\n  });\n  // хук для данных для отрисовки карточек\n  const [cards, setCards] = React.useState([]);\n\n  const history = useHistory();\n\n  // открытие модалки профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n  // открытие модалки добавления карточки\n  const handleEditPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n  // открытие модалки аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // открытие модалки с зумом\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n  // открытие модалки с подтверждением удаления карточки\n  const handleDeleteConfirmClick = (card) => {\n    setSelectedCardDelete(card);\n    setIsConfirmPopupOpen(true);\n  }\n\n  // закрытие всех модалок оптом\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsInfoTooltipPopupOpen(false);\n    setSelectedCard({});\n    setSelectedCardDelete({});\n  }\n\n  // функция для обновления данных пользователя\n  function handleUpdateUser({name, about}) {\n    api.sendUserInfo({name, about})\n    .then((res) => {\n      setCurrentUser(res)\n      closeAllPopups()\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n  // функция для обновления аватара пользователя\n  function handleUpdateAvatar(avatar) {\n    api.setAvatar(avatar)\n    .then(res => {\n      setCurrentUser(res)\n      closeAllPopups()\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  // функция для добавления карточки и перерисовывания массива с новой карточкой\n  function handleAddPlaceSubmit(data) {\n    return api.sendNewCard(data)\n    .then ((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n  // установка лайков/дизлайков для карточек\n  function handleCardLike(card) {\n    // проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.toggleLike(isLiked, card._id)\n    .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n  // подтверждение удаления карточки\n  function handleConfirmSubmit() {\n    return api.deleteCard(selectedCardDelete)\n    .then (() => {\n      setCards(cards => cards.filter(card => card._id !== selectedCardDelete));\n      closeAllPopups();\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  //Регистрация нового пользователя\n  const handleRegister = (email, password) => {\n    auth.register(email, password)\n    .then(() => {\n      console.log(isRegistrationSuccess)\n      setIsRegistrationSuccess(true);\n      console.log(isRegistrationSuccess)\n      console.log(isInfoTooltipPopupOpen)\n      setIsInfoTooltipPopupOpen(true);\n      console.log(isInfoTooltipPopupOpen)\n      history.push('/sign-in')\n    })\n    .catch((err) => {\n      setIsRegistrationSuccess(false);\n      setIsInfoTooltipPopupOpen(true);\n      console.log(err)\n    })\n  }\n\n  //Логин пользователя\n  const handleLogin = (email, password ) => {\n    auth.authorize(email, password)\n    .then((res) => {\n      console.log(res)\n      if (res.token) {\n        localStorage.setItem('token', res.token);\n        setLoggedIn(true);\n        setIsLoginError(false);\n        history.push('/');\n      }\n    })\n    .catch((err) => {\n      setIsLoginError(true);\n      console.log(err)\n    })\n  }\n\n  //проверка наличия и подлинности токена пользователя\n  const checkToken = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      auth.checkUser(token)\n      .then((res) => {\n        if (res.data.email)\n        setLoggedIn(true);\n        setEmail(res.data.email);\n        history.push('/');\n      })\n      .catch((err)=>{\n        console.log(err);\n      })\n    }\n  }\n\n  //Логика кнопки в шапке\n  const headerBtnSignIn = () => {\n    history.push('/sign-up')\n  }\n  const headerBtnSignUp = () => {\n    history.push('/sign-in')\n  }\n  const handleLogout = () => {\n    setLoggedIn(false);\n    localStorage.removeItem('token');\n    history.push('/sign-in');\n  }\n\n  // получение информации о пользователе и массива карточек при отрисовке страницы\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getDefaultCards()])\n    .then(([userInfo, defaultCards]) => {\n      setCurrentUser(userInfo);\n      setCards(defaultCards);\n    })\n    .catch(error => console.log(error));\n  }, [])\n\n\n  // Проверка авторизации при отрисовке страницы\n  React.useEffect(() => {\n    checkToken();\n  })\n\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n\n        <Switch>\n          <Route exact path=\"/sign-up\">\n              <Register\n                handleHeaderBtn={headerBtnSignUp}\n                handleRegister={handleRegister}\n                isLoggedIn={loggedIn}\n                buttonText=\"Войти\"\n              />\n          </Route>\n\n          <Route exact path=\"/sign-in\">\n            <Login\n              handleHeaderBtn={headerBtnSignIn}\n              handleLogin={handleLogin}\n              isLoggedIn={loggedIn}\n              isLoginError={isLoginError}\n              buttonText=\"Регистрация\"\n            />\n          </Route>\n\n          <ProtectedRoute exact path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleEditPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleDeleteConfirmClick}\n            onCardClick={handleCardClick}\n            email={email}\n            handleHeaderBtn={handleLogout}\n            buttonText=\"Выйти\"\n          />\n\n          <Route path=\"*\">\n              <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n\n        {/* Модалка с увеличенным изображением карточки */}\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n        {/* Модалка для смены аватара */}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        {/* Модалка с редактированием профиля */}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        {/* Модалка с добавлением новой карточки */}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleAddPlaceSubmit}\n        />\n        {/* Модалка с подтверждением удаления карточки */}\n        <ConfirmDeletePopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onDelete={handleConfirmSubmit}\n        />\n\n        {/* Модалка с информированием об успешной или неуспешной регистрации */}\n        <InfoTooltip\n          isOpen={isInfoTooltipPopupOpen}\n          onClose={closeAllPopups}\n          isSucces={isRegistrationSuccess}\n        />\n\n        <Footer />\n\n      </CurrentUserContext.Provider>\n\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}